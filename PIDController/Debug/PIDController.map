Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
                              ./ds18x20.o (__umulhisi3)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
                              ./ds18x20.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
                              ./ds18x20.o (__divmodsi4)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o (exit)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                              ./ds12887.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                              ./pidcontroller.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o)
                              ./lcd.o (itoa)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

state               0x1               ./pidcontroller.o
min                 0x1               ./pidcontroller.o
sec                 0x1               ./pidcontroller.o
gSensorIDs          0x28              ./pidcontroller.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
LOAD ./crc8.o
LOAD ./ds12887.o
LOAD ./ds18x20.o
LOAD ./lcd.o
LOAD ./onewire.o
LOAD ./pidcontroller.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x10ee
 *(.vectors)
 .vectors       0x0000000000000000       0x22 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000022                . = ALIGN (0x2)
                0x0000000000000022                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000022        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000022                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000022                __ctors_start = .
 *(.ctors)
                0x0000000000000022                __ctors_end = .
                0x0000000000000022                __dtors_start = .
 *(.dtors)
                0x0000000000000022                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000022        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
                0x0000000000000022                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000022        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
                0x0000000000000058                __vector_1
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_6
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
 .text          0x000000000000005a       0x3c ./crc8.o
                0x000000000000005a                crc8
 .text          0x0000000000000096       0xc2 ./ds12887.o
                0x0000000000000096                util_create_addr
                0x0000000000000098                ds12887_read_address
                0x00000000000000c4                ds12887_read_ds_control_d
                0x00000000000000ca                ds12887_read_ds_control_b
                0x00000000000000d0                ds12887_read_ds_control_a
                0x00000000000000d6                ds12887_read_sec
                0x00000000000000dc                ds12887_write_address
                0x0000000000000106                ds12887_write_ds_control_b
                0x000000000000010c                ds12887_write_ds_control_a
                0x0000000000000112                ds12887_init
 .text          0x0000000000000158      0x7b8 ./ds18x20.o
                0x000000000000035e                DS18X20_find_sensor
                0x00000000000003a0                DS18X20_get_power_status
                0x00000000000003c4                DS18X20_start_meas
                0x00000000000003f8                DS18X20_conversion_in_progress
                0x0000000000000406                DS18X20_format_from_decicelsius
                0x000000000000050a                DS18X20_read_decicelsius
                0x0000000000000570                DS18X20_read_decicelsius_single
                0x00000000000005d0                DS18X20_read_maxres
                0x000000000000063a                DS18X20_read_maxres_single
                0x000000000000069e                DS18X20_format_from_maxres
                0x0000000000000810                DS18X20_write_scratchpad
                0x000000000000085c                DS18X20_read_scratchpad
                0x000000000000088c                DS18X20_scratchpad_to_eeprom
                0x00000000000008da                DS18X20_eeprom_to_scratchpad
 .text          0x0000000000000910      0x1fa ./lcd.o
                0x00000000000009cc                lcd_command
                0x00000000000009dc                lcd_data
                0x00000000000009ec                lcd_gotoxy
                0x00000000000009fc                lcd_getxy
                0x0000000000000a02                lcd_clrscr
                0x0000000000000a08                lcd_home
                0x0000000000000a0e                lcd_putc
                0x0000000000000a32                lcd_puts
                0x0000000000000a4c                lcd_put_num
                0x0000000000000a86                lcd_puts_p
                0x0000000000000aa8                lcd_init
 .text          0x0000000000000b0a      0x1ea ./onewire.o
                0x0000000000000b0a                ow_input_pin_state
                0x0000000000000b10                ow_parasite_enable
                0x0000000000000b60                ow_parasite_disable
                0x0000000000000b64                ow_reset
                0x0000000000000b96                ow_bit_io
                0x0000000000000b9e                ow_byte_wr
                0x0000000000000bbe                ow_byte_wr_with_parasite_enable
                0x0000000000000c3c                ow_byte_rd
                0x0000000000000c42                ow_rom_search
                0x0000000000000ce8                ow_command
                0x0000000000000cee                ow_command_with_parasite_enable
 .text          0x0000000000000cf4      0x2b8 ./pidcontroller.o
                0x0000000000000cf4                __vector_4
                0x0000000000000d2c                waitForOk
                0x0000000000000d32                setMashTimeLoop
                0x0000000000000db0                setMashTempLoop
                0x0000000000000e58                main
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x0000000000000fac        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000fac                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x0000000000000fac       0x18 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
                0x0000000000000fac                __umulhisi3
 .text.libgcc.div
                0x0000000000000fc4        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000fc4        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000fc4        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000fc4        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000fc4        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x0000000000000fc4        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000fc4       0x26 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
                0x0000000000000fc4                __divmodhi4
                0x0000000000000fc4                _div
 .text.libgcc   0x0000000000000fea        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000fea        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000fea        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000fea        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000fea        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000000fea       0x36 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
                0x0000000000000fea                __divmodsi4
 .text.libgcc   0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000001020        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000001020       0x28 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000001020                __udivmodhi4
 .text.libgcc   0x0000000000001048        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001048        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001048        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001048        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000001048        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000001048       0x44 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000001048                __udivmodsi4
 .text.libgcc   0x000000000000108c        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000000108c        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000000108c        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000000108c        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x000000000000108c       0x3e /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o)
                0x000000000000108c                itoa
 .text.avr-libc
                0x00000000000010ca       0x20 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x00000000000010ca                strrev
                0x00000000000010ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000010ea        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                0x00000000000010ea                exit
                0x00000000000010ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000010ea        0x4 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000010ee                _etext = .

.data           0x0000000000800060       0x60 load address 0x00000000000010ee
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
 .data          0x0000000000800060        0x0 ./crc8.o
 .data          0x0000000000800060        0x0 ./ds12887.o
 .data          0x0000000000800060        0x0 ./ds18x20.o
 .data          0x0000000000800060        0x0 ./lcd.o
 .data          0x0000000000800060        0x0 ./onewire.o
 .data          0x0000000000800060        0x4 ./pidcontroller.o
                0x0000000000800060                boilTime
                0x0000000000800061                initialMashTemp
                0x0000000000800062                mashTemp
                0x0000000000800063                mashTime
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x0000000000800064        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800064       0x13 ./ds12887.o
 .rodata.str1.1
                0x0000000000800077       0x48 ./pidcontroller.o
                                         0x4d (size before relaxing)
 *(.gnu.linkonce.d*)
                0x00000000008000c0                . = ALIGN (0x2)
 *fill*         0x00000000008000bf        0x1 00
                0x00000000008000c0                _edata = .
                0x00000000008000c0                PROVIDE (__data_end, .)

.bss            0x00000000008000c0       0x2b
                0x00000000008000c0                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
 .bss           0x00000000008000c0        0x0 ./crc8.o
 .bss           0x00000000008000c0        0x0 ./ds12887.o
 .bss           0x00000000008000c0        0x0 ./ds18x20.o
 .bss           0x00000000008000c0        0x0 ./lcd.o
 .bss           0x00000000008000c0        0x0 ./onewire.o
 .bss           0x00000000008000c0        0x0 ./pidcontroller.o
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_umulhisi3.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x00000000008000c0        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000c0       0x2b ./pidcontroller.o
                0x00000000008000c0                state
                0x00000000008000c1                min
                0x00000000008000c2                sec
                0x00000000008000c3                gSensorIDs
                0x00000000008000eb                PROVIDE (__bss_end, .)
                0x00000000000010ee                __data_load_start = LOADADDR (.data)
                0x000000000000114e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000eb        0x0
                0x00000000008000eb                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000eb                PROVIDE (__noinit_end, .)
                0x00000000008000eb                _end = .
                0x00000000008000eb                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x4074
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o
 .stab          0x00000000000006cc      0x360 ./crc8.o
                                        0x36c (size before relaxing)
 .stab          0x0000000000000a2c      0x5e8 ./ds12887.o
                                        0x75c (size before relaxing)
 .stab          0x0000000000001014     0x1128 ./ds18x20.o
                                       0x12e4 (size before relaxing)
 .stab          0x000000000000213c      0xab0 ./lcd.o
                                        0xcc0 (size before relaxing)
 .stab          0x0000000000002bec      0x99c ./onewire.o
                                        0xb64 (size before relaxing)
 .stab          0x0000000000003588      0x864 ./pidcontroller.o
                                        0xa8c (size before relaxing)
 .stab          0x0000000000003dec      0x1b0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x0000000000003f9c       0xd8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000     0x15d5
 *(.stabstr)
 .stabstr       0x0000000000000000     0x15d5 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm8515.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./crc8.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./ds12887.o
 .comment       0x0000000000000000       0x12 ./ds18x20.o
 .comment       0x0000000000000000       0x12 ./lcd.o
 .comment       0x0000000000000000       0x12 ./onewire.o
 .comment       0x0000000000000000       0x12 ./pidcontroller.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(PIDController.elf elf32-avr)
LOAD linker stubs
