Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                              ./ds18x20.o (__umulhisi3)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
                              ./ds18x20.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
                              ./ds18x20.o (__divmodsi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./buttons.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              ./pidcontroller.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
                              ./lcd.o (itoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

state               0x1               ./pidcontroller.o
decicelsius         0x2               ./pidcontroller.o
min                 0x1               ./pidcontroller.o
sec                 0x1               ./pidcontroller.o
gSensorIDs          0x8               ./pidcontroller.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD ./buttons.o
LOAD ./crc8.o
LOAD ./ds12887.o
LOAD ./ds18x20.o
LOAD ./lcd.o
LOAD ./mash.o
LOAD ./onewire.o
LOAD ./pidcontroller.o
LOAD ./utils.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1520
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092        0x0 ./buttons.o
 .text          0x0000000000000092       0x3c ./crc8.o
                0x0000000000000092                crc8
 .text          0x00000000000000ce       0xe0 ./ds12887.o
                0x00000000000000ce                util_create_addr
                0x00000000000000d0                ds12887_read_address
                0x00000000000000fc                ds12887_read_ds_control_d
                0x0000000000000104                ds12887_read_ds_control_b
                0x000000000000010c                ds12887_read_ds_control_a
                0x0000000000000114                ds12887_read_sec
                0x000000000000011c                ds12887_write_address
                0x0000000000000146                ds12887_write_ds_control_b
                0x000000000000014e                ds12887_write_ds_control_a
                0x0000000000000156                ds12887_init
 .text          0x00000000000001ae      0x810 ./ds18x20.o
                0x00000000000003bc                DS18X20_find_sensor
                0x0000000000000400                DS18X20_get_power_status
                0x000000000000042c                DS18X20_start_meas
                0x0000000000000468                DS18X20_conversion_in_progress
                0x0000000000000478                DS18X20_format_from_decicelsius
                0x000000000000057e                DS18X20_read_decicelsius
                0x00000000000005ea                DS18X20_read_decicelsius_single
                0x000000000000064e                DS18X20_read_maxres
                0x00000000000006be                DS18X20_read_maxres_single
                0x0000000000000726                DS18X20_format_from_maxres
                0x000000000000089a                DS18X20_write_scratchpad
                0x00000000000008f2                DS18X20_read_scratchpad
                0x0000000000000928                DS18X20_scratchpad_to_eeprom
                0x0000000000000980                DS18X20_eeprom_to_scratchpad
 .text          0x00000000000009be      0x232 ./lcd.o
                0x0000000000000a82                lcd_command
                0x0000000000000a96                lcd_data
                0x0000000000000aaa                lcd_gotoxy
                0x0000000000000abe                lcd_getxy
                0x0000000000000ac6                lcd_clrscr
                0x0000000000000ace                lcd_home
                0x0000000000000ad6                lcd_putc
                0x0000000000000b00                lcd_puts
                0x0000000000000b1c                lcd_put_num
                0x0000000000000b58                lcd_puts_p
                0x0000000000000b7c                lcd_init
 .text          0x0000000000000bf0        0x0 ./mash.o
 .text          0x0000000000000bf0      0x20e ./onewire.o
                0x0000000000000bf0                ow_input_pin_state
                0x0000000000000bf6                ow_parasite_enable
                0x0000000000000c44                ow_parasite_disable
                0x0000000000000c48                ow_reset
                0x0000000000000c7a                ow_bit_io
                0x0000000000000c84                ow_byte_wr
                0x0000000000000ca6                ow_byte_wr_with_parasite_enable
                0x0000000000000d34                ow_byte_rd
                0x0000000000000d3c                ow_rom_search
                0x0000000000000dee                ow_command
                0x0000000000000df6                ow_command_with_parasite_enable
 .text          0x0000000000000dfe        0x0 ./pidcontroller.o
 .text          0x0000000000000dfe        0x0 ./utils.o
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x0000000000000dfe        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000000dfe                . = ALIGN (0x2)
 *(.text.*)
 .text.readButtons
                0x0000000000000dfe       0x58 ./buttons.o
                0x0000000000000dfe                readButtons
 .text.waitForOk
                0x0000000000000e56        0xa ./buttons.o
                0x0000000000000e56                waitForOk
 .text.setMashLinearStartTemp
                0x0000000000000e60       0x1c ./mash.o
                0x0000000000000e60                setMashLinearStartTemp
 .text.setMashLinearStopTemp
                0x0000000000000e7c       0x1c ./mash.o
                0x0000000000000e7c                setMashLinearStopTemp
 .text.setNumberOfMashBreaks
                0x0000000000000e98       0x60 ./mash.o
                0x0000000000000e98                setNumberOfMashBreaks
 .text.setMashTimeLoop
                0x0000000000000ef8       0x68 ./mash.o
                0x0000000000000ef8                setMashTimeLoop
 .text.setMashTimesLoop
                0x0000000000000f60       0x28 ./mash.o
                0x0000000000000f60                setMashTimesLoop
 .text.setMashTempLoop
                0x0000000000000f88       0x64 ./mash.o
                0x0000000000000f88                setMashTempLoop
 .text.setMashTempsLoop
                0x0000000000000fec       0x28 ./mash.o
                0x0000000000000fec                setMashTempsLoop
 .text.printMashType
                0x0000000000001014       0x48 ./mash.o
                0x0000000000001014                printMashType
 .text.setMashType
                0x000000000000105c       0x3a ./mash.o
                0x000000000000105c                setMashType
 .text.printUseMashOut
                0x0000000000001096       0x3c ./mash.o
                0x0000000000001096                printUseMashOut
 .text.setUseMashOut
                0x00000000000010d2       0x3e ./mash.o
                0x00000000000010d2                setUseMashOut
 .text.setupMash
                0x0000000000001110       0x76 ./mash.o
                0x0000000000001110                setupMash
 .text.__vector_10
                0x0000000000001186       0x2e ./pidcontroller.o
                0x0000000000001186                __vector_10
 .text.__vector_7
                0x00000000000011b4       0x38 ./pidcontroller.o
                0x00000000000011b4                __vector_7
 .text.__vector_4
                0x00000000000011ec       0x14 ./pidcontroller.o
                0x00000000000011ec                __vector_4
 .text.turn_on_mash_heater
                0x0000000000001200        0x4 ./pidcontroller.o
                0x0000000000001200                turn_on_mash_heater
 .text.turn_off_mash_heater
                0x0000000000001204        0x4 ./pidcontroller.o
                0x0000000000001204                turn_off_mash_heater
 .text.setupTimers
                0x0000000000001208       0x44 ./pidcontroller.o
                0x0000000000001208                setupTimers
 .text.main     0x000000000000124c       0xac ./pidcontroller.o
                0x000000000000124c                main
 .text.getValueFromInput
                0x00000000000012f8       0x20 ./utils.o
                0x00000000000012f8                getValueFromInput
 .text.printStringAndNum
                0x0000000000001318       0x30 ./utils.o
                0x0000000000001318                printStringAndNum
 .text.getUserValueWithString
                0x0000000000001348       0x82 ./utils.o
                0x0000000000001348                getUserValueWithString
 .text.libgcc.mul
                0x00000000000013ca       0x1e /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000013ca                __umulhisi3
 .text.libgcc.div
                0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x00000000000013e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x00000000000013e8       0x28 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
                0x00000000000013e8                __divmodhi4
                0x00000000000013e8                _div
 .text.libgcc   0x0000000000001410        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001410        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001410        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001410        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001410        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000001410        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000001410       0x2e /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
                0x0000000000001410                __divmodsi4
 .text.libgcc   0x000000000000143e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x000000000000143e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x000000000000143e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x000000000000143e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x000000000000143e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x000000000000143e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x000000000000143e       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
                0x000000000000143e                __negsi2
 .text.libgcc   0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000000144e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000144e       0x28 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                0x000000000000144e                __udivmodhi4
 .text.libgcc   0x0000000000001476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000001476        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000001476       0x44 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000001476                __udivmodsi4
 .text.libgcc   0x00000000000014ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000014ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000014ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000014ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000014ba        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x00000000000014ba       0x42 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
                0x00000000000014ba                itoa
 .text.avr-libc
                0x00000000000014fc       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000000000014fc                strrev
                0x000000000000151c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000151c        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000151c                exit
                0x000000000000151c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000151c        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001520                _etext = .

.data           0x0000000000800060       0xb0 load address 0x0000000000001520
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./buttons.o
 .data          0x0000000000800060        0x0 ./crc8.o
 .data          0x0000000000800060        0x0 ./ds12887.o
 .data          0x0000000000800060        0x0 ./ds18x20.o
 .data          0x0000000000800060        0x0 ./lcd.o
 .data          0x0000000000800060        0x0 ./mash.o
 .data          0x0000000000800060        0x0 ./onewire.o
 .data          0x0000000000800060        0x0 ./pidcontroller.o
 .data          0x0000000000800060        0x0 ./utils.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.data*)
 .data.okForNewPress.1742
                0x0000000000800060        0x1 ./buttons.o
 .data.boilTime
                0x0000000000800061        0x1 ./pidcontroller.o
                0x0000000000800061                boilTime
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800062       0x13 ./ds12887.o
 .rodata.str1.1
                0x0000000000800075       0x70 ./mash.o
 .rodata.str1.1
                0x00000000008000e5       0x2a ./pidcontroller.o
 *(.gnu.linkonce.d*)
                0x0000000000800110                . = ALIGN (0x2)
 *fill*         0x000000000080010f        0x1 
                0x0000000000800110                _edata = .
                0x0000000000800110                PROVIDE (__data_end, .)

.bss            0x0000000000800110        0xf
                0x0000000000800110                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800110        0x0 ./buttons.o
 .bss           0x0000000000800110        0x0 ./crc8.o
 .bss           0x0000000000800110        0x0 ./ds12887.o
 .bss           0x0000000000800110        0x0 ./ds18x20.o
 .bss           0x0000000000800110        0x0 ./lcd.o
 .bss           0x0000000000800110        0x0 ./mash.o
 .bss           0x0000000000800110        0x0 ./onewire.o
 .bss           0x0000000000800110        0x0 ./pidcontroller.o
 .bss           0x0000000000800110        0x0 ./utils.o
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_negsi2.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.bss*)
 .bss.heaterCounter
                0x0000000000800110        0x1 ./pidcontroller.o
                0x0000000000800110                heaterCounter
 .bss.heaterPwmDuty
                0x0000000000800111        0x1 ./pidcontroller.o
                0x0000000000800111                heaterPwmDuty
 *(COMMON)
 COMMON         0x0000000000800112        0xd ./pidcontroller.o
                0x0000000000800112                state
                0x0000000000800113                decicelsius
                0x0000000000800115                min
                0x0000000000800116                sec
                0x0000000000800117                gSensorIDs
                0x000000000080011f                PROVIDE (__bss_end, .)
                0x0000000000001520                __data_load_start = LOADADDR (.data)
                0x00000000000015d0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080011f        0x0
                0x000000000080011f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080011f                PROVIDE (__noinit_end, .)
                0x000000000080011f                _end = .
                0x000000000080011f                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x56ac
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x63c ./buttons.o
                                        0x648 (size before relaxing)
 .stab          0x0000000000000d08      0x360 ./crc8.o
                                        0x36c (size before relaxing)
 .stab          0x0000000000001068      0x5dc ./ds12887.o
                                        0x750 (size before relaxing)
 .stab          0x0000000000001644     0x1128 ./ds18x20.o
                                       0x12e4 (size before relaxing)
 .stab          0x000000000000276c      0xab0 ./lcd.o
                                        0xcc0 (size before relaxing)
 .stab          0x000000000000321c      0xc00 ./mash.o
                                        0xe34 (size before relaxing)
 .stab          0x0000000000003e1c      0x99c ./onewire.o
                                        0xb64 (size before relaxing)
 .stab          0x00000000000047b8      0x708 ./pidcontroller.o
                                        0x930 (size before relaxing)
 .stab          0x0000000000004ec0      0x564 ./utils.o
                                        0x798 (size before relaxing)
 .stab          0x0000000000005424      0x1b0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(itoa.o)
                                        0x1bc (size before relaxing)
 .stab          0x00000000000055d4       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000     0x24b8
 *(.stabstr)
 .stabstr       0x0000000000000000     0x24b8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x22
 *(.comment)
 .comment       0x0000000000000000       0x11 ./buttons.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x11 ./crc8.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./ds12887.o
 .comment       0x0000000000000000       0x12 ./ds18x20.o
 .comment       0x0000000000000000       0x12 ./lcd.o
 .comment       0x0000000000000000       0x12 ./mash.o
 .comment       0x0000000000000000       0x12 ./onewire.o
 .comment       0x0000000000000000       0x12 ./pidcontroller.o
 .comment       0x0000000000000000       0x12 ./utils.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(PIDController.elf elf32-avr)
LOAD linker stubs
